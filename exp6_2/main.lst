


ARM Macro Assembler    Page 1 


    1 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
    2 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
    3 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
    4 00000000         
    5 00000000         
    6 00000000                 AREA             SEVEN,CODE,READONLY
    7 00000000                 EXPORT           __main      ;refer the line no 
                                                            416 of startup.s fi
                                                            le
    8 00000000         __main
    9 00000000                 ENTRY
   10 00000000 E59F10F4        LDR              r1, =IO0DIR ; load the address 
                                                            of the IODIR reg to
                                                             R1
   11 00000004 E59F00F4        LDR              r0,=0x10FF0000 ; pins P0.16 to 
                                                            P0.23 and P0.28 as 
                                                            output pins
   12 00000008 E5810000        STR              r0, [r1]
   13 0000000C         ;This configure P0.16 to P0.23 as output pins
   14 0000000C E59F10E8        LDR              r1,=IO0DIR  ; load the address 
                                                            of the IODIR reg to
                                                             R1
   15 00000010 E3A0060F        LDR              r0,=0x0F00000 ; configure p1.20
                                                            -p1.23 as output (s
                                                            can lines) p1.16-p1
                                                            .19 as input STR RO
                                                            , [R1]
   16 00000014         
   17 00000014 E3A01000        LDR              R1,=IO0PIN
   18 00000018 E51F2020        LDR              R2,-IOOPIN
   19 0000001C E59F40E4        LDR              R4,=IO0CLR
   20 00000020 E3A0060F 
                       BK1     LDR              R0,=0x0F00000
   21 00000024 E5840000        STR              R0, [R4]    ; CLEAR SCAN LINES 
                                                            TO CHECK THAT NO KE
                                                            YS ARE RELEASED
   22 00000028 E5915000        LDR              R5, [R1]    ; READ FROM KEYBOAR
                                                            D
   23 0000002C E205580F        AND              R5, R5, #0X0F0000 ; RETAIN ONLY
                                                             RETURN VALUE
   24 00000030 E355080F        CMP              R5, #0XF0000 ; IF KEY STILL PRE
                                                            SSED, THEN R5 NOT E
                                                            QUAL TO OXF0000 BNE
                                                             BK1; CHECK TILL KE
                                                            YS ARE RELEASED
   25 00000034 EB000000 
                       BK2     BL               DELAY       ;WAIT FOR SOME TIME
                                                            
   26 00000038 E5915000        LDR              R5, [R1]    ;READ FROM KEYBOARD
                                                            
   27 0000003C E205580F        AND              R5, R5, #0XF0000 ; RETAIN ONLY 
                                                            RETURN VALUE
   28 00000040 E355080F        CMP              R5, #0XF0000 ;IF KEY
   29 00000044         ;PRESSED, THEN R5 NOT EQUAL TO OXF0000
   30 00000044 0AFFFFFA        BEQ              BK2         ; IF KEY IS NOT PRE
                                                            SSED THE GO BACK TO



ARM Macro Assembler    Page 2 


                                                             BK2
   31 00000048 EB000000        BL               DELAY
   32 0000004C E5915000        LDR              R5, [R1]    ;READ INPUT
   33 00000050 E205580F        AND              R5, R5, #0XF0000 ; RETAIN ONLY 
                                                            RETURN VALUE
   34 00000054 E355080F        CMP              R5, #0XF0000
   35 00000058 0AFFFFF5        BEQ              BK2         ; CHECK AGAIN FOR K
                                                            EY PRESSED
   36 0000005C E3A0060E        LDR              R0, =0XE00000 ; NOW APPLY O ONL
                                                            Y TO ROWO THROUGH P
                                                            1.20
   37 00000060 E5810000        STR              R0, [R1]
   38 00000064 E5915000        LDR              R5, [R1]
   39 00000068         ;READ FROM RETURN LINES
   40 00000068 E205580F        AND              R5, R5, #0XF0000 ; RETAIN ONLY 
                                                            RETURN VALUE
   41 0000006C E355080F        CMP              R5, #0XF0000 ; CHECK WHETHER KE
                                                            Y FOR CORRESPONDING
                                                             ROWO IS PRESSED OR
                                                             NOT BNE ROWO
   42 00000070 E3A0060D        LDR              R0, =0XD00000 ; NOW APPLY O ONL
                                                            Y TO ROW1 THROUGH P
                                                            1.21
   43 00000074 E5810000        STR              R0, [R1]
   44 00000078 E5915000        LDR              R5, [R1]    ;READ FROM RETURN L
                                                            INES
   45 0000007C E205580F        AND              R5, R5, #0XF0000 ; RETAIN ONLY 
                                                            RETURN VALUE
   46 00000080 E355080F        CMP              R5, #0XF0000 ;CHECK WHETHER KEY
                                                             FOR CORRESPONDING 
                                                            ROWO IS PRESSED OR 
                                                            NOT
   47 00000084 1A00000D        BNE              ROW1
   48 00000088 E3A0060B        LDR              R0, =0XB00000 ; NOW APPLY O ONL
                                                            Y TO ROW1 THROUGH P
                                                            1.22
   49 0000008C E5810000        STR              R0, [R1]
   50 00000090 E5915000        LDR              R5, [R1]
   51 00000094 E205580F        AND              R5, R5, #0XF0000 ; RETAIN ONLY 
                                                            RETURN VALUE
   52 00000098 E355080F        CMP              R5, #0XF0000
   53 0000009C 1A000008        BNE              ROW2
   54 000000A0 E3A00607        LDR              R0,=0X700000 ; NOW APPLY 0 ONLY
                                                             TO ROW1 THROUGH P1
                                                            .23
   55 000000A4 E5810000        STR              R0, [R1]
   56 000000A8 E5915000        LDR              R5, [R1]
   57 000000AC E205580F        AND              R5, R5, #0XF0000 ; RETAIN ONLY 
                                                            RETURN VALUE
   58 000000B0 E355080F        CMP              R5, #0XF0000
   59 000000B4 1A000003        BNE              ROW3
   60 000000B8 EAFFFFDD        B                BK2
   61 000000BC E3A06000 
                       ROW0    LDR              R6,=SEG_CODE0 ; STARTING ADDRES
                                                            S SEVEN SEGMENT COD
                                                            E FOR ROWO B FIND
   62 000000C0 E3A06000 
                       ROW1    LDR              R6,=SEG_CODE1 ; STARTING ADDRES
                                                            S SEVEN SEGMENT COD



ARM Macro Assembler    Page 3 


                                                            E FOR ROW1 B FIND
   63 000000C4 E3A06000 
                       ROW2    LDR              R6,=SEG_CODE2 ;STARTING ADDRESS
                                                             SEVEN SEGMENT CODE
                                                             FOR ROW3 B FIND
   64 000000C8 E51F60D0 
                       ROW3    LDR              R6,-SEG_CODE3 ; STARTING ADDRES
                                                            S SEVEN SEGMENT COD
                                                            E FOR ROWO
   65 000000CC         
   66 000000CC E3A08010 
                       FIND    MOV              R8, #16
   67 000000D0 E1B07815 
                       NXT     MOVS             R7, R5, LSL R8
   68 000000D4 3A000002        BCC              MATCH
   69 000000D8 E2488001        SUB              R8, R8, #1
   70 000000DC E2866001        ADD              R6,R6, #1
   71 000000E0 EAFFFFFA        B                NXT
   72 000000E4         ;TO POINT TO NEXT MEMORY LOCATION IN THE SAME ROW
   73 000000E4 E3A00201 
                       MATCH   LDR              R0,=0X10000000 ; SELECT AEGMENT
                                                             FOR DISPLAY
   74 000000E8 E5D69000        LDRB             R9, [R6]
   75 000000EC E1A09809        MOV              R9, R9, LSL#16
   76 000000F0 E1899000        ORR              R9, R9, R0
   77 000000F4 E5829000        STR              R9, [R2]
   78 000000F8         ; FETCH CODE FOR KEY PRESSED
   79 000000F8         ; SHIFT TO FIT INTO PO.16-PO.23
   80 000000F8         ;RETAIN BOTH SEGMENT SELSCTION AND CODE
   81 000000F8         ; SEND TO PORTO TO DISPLAY
   82 000000F8 EAFFFFC8        B                BK1
   83 000000FC                 END
              E0028008 
              10FF0000 
              00000000 
              E002800C 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\main.d -o.\main.o -IC:
\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips --pred
efine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --list=.\main.lst main.s
