IO0DIR EQU  0xE0028008
IO0SET EQU  0xE0028004
IO0CLR EQU  0xE002800C
	
	
	AREA SEVEN,CODE,READONLY
		EXPORT __main ;refer the line no 416 of startup.s file
__main
	ENTRY
		LDR r1, =IO0DIR; load the address of the IODIR reg to R1
		LDR r0,=0x10FF0000; pins P0.16 to P0.23 and P0.28 as output pins
		STR r0, [r1]
		;This configure P0.16 to P0.23 as output pins
		LDR r1,=IO0DIR; load the address of the IODIR reg to R1
		LDR r0,=0x0F00000; configure p1.20-p1.23 as output (scan lines) p1.16-p1.19 as input STR RO, [R1]

		LDR R1,=IO0PIN 
		LDR R2,=IOOPIN
		LDR R4,=IO0CLR
BK1 	LDR R0,=0x0F00000
		STR R0, [R4]; CLEAR SCAN LINES TO CHECK THAT NO KEYS ARE RELEASED
		LDR R5, [R1]; READ FROM KEYBOARD
		AND R5, R5, #0X0F0000; RETAIN ONLY RETURN VALUE
		CMP R5, #0XF0000 ; IF KEY STILL PRESSED, THEN R5 NOT EQUAL TO OXF0000 BNE BK1; CHECK TILL KEYS ARE RELEASED
BK2 	BL DELAY ;WAIT FOR SOME TIME
		LDR R5, [R1] ;READ FROM KEYBOARD
		AND R5, R5, #0XF0000; RETAIN ONLY RETURN VALUE
		CMP R5, #0XF0000 ;IF KEY
		;PRESSED, THEN R5 NOT EQUAL TO OXF0000
		BEQ BK2; IF KEY IS NOT PRESSED THE GO BACK TO BK2
		BL DELAY
		LDR R5, [R1] ;READ INPUT
		AND R5, R5, #0XF0000; RETAIN ONLY RETURN VALUE
		CMP R5, #0XF0000
		BEQ BK2; CHECK AGAIN FOR KEY PRESSED
		LDR R0, =0XE00000; NOW APPLY O ONLY TO ROWO THROUGH P1.20
		STR R0, [R1]
		LDR R5, [R1]
		;READ FROM RETURN LINES
		AND R5, R5, #0XF0000; RETAIN ONLY RETURN VALUE
		CMP R5, #0XF0000 ; CHECK WHETHER KEY FOR CORRESPONDING ROWO IS PRESSED OR NOT BNE ROWO
		LDR R0, =0XD00000; NOW APPLY O ONLY TO ROW1 THROUGH P1.21
		STR R0, [R1]
		LDR R5, [R1] ;READ FROM RETURN LINES
		AND R5, R5, #0XF0000; RETAIN ONLY RETURN VALUE
		CMP R5, #0XF0000 ;CHECK WHETHER KEY FOR CORRESPONDING ROWO IS PRESSED OR NOT
		BNE ROW1
		LDR R0, =0XB00000; NOW APPLY O ONLY TO ROW1 THROUGH P1.22
		STR R0, [R1]
		LDR R5, [R1]
		AND R5, R5, #0XF0000; RETAIN ONLY RETURN VALUE
		CMP R5, #0XF0000
		BNE ROW2
		LDR R0,=0X700000; NOW APPLY 0 ONLY TO ROW1 THROUGH P1.23
		STR R0, [R1]
		LDR R5, [R1]
		AND R5, R5, #0XF0000; RETAIN ONLY RETURN VALUE
		CMP R5, #0XF0000
		BNE ROW3
		B BK2
ROW0 	LDR R6,=SEG_CODE0 ; STARTING ADDRESS SEVEN SEGMENT CODE FOR ROWO B FIND
ROW1 	LDR R6,=SEG_CODE1 ; STARTING ADDRESS SEVEN SEGMENT CODE FOR ROW1 B FIND
ROW2 	LDR R6,=SEG_CODE2 ;STARTING ADDRESS SEVEN SEGMENT CODE FOR ROW3 B FIND
ROW3 	LDR R6,-SEG_CODE3 ; STARTING ADDRESS SEVEN SEGMENT CODE FOR ROWO

FIND 	MOV R8, #16
NXT 	MOVS R7, R5, LSL R8
	BCC MATCH
	SUB R8, R8, #1
	ADD R6,R6, #1
		B NXT
	;TO POINT TO NEXT MEMORY LOCATION IN THE SAME ROW
MATCH 	LDR R0,=0X10000000; SELECT AEGMENT FOR DISPLAY
	LDRB R9, [R6]
	MOV R9, R9, LSL#16
	ORR R9, R9, R0
	STR R9, [R2]
	; FETCH CODE FOR KEY PRESSED
	; SHIFT TO FIT INTO PO.16-PO.23
	;RETAIN BOTH SEGMENT SELSCTION AND CODE
	; SEND TO PORTO TO DISPLAY
	B BK1
		END













